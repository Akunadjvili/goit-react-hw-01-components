{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","Object","entries","map","item","value","label","quantity","defaultProps","followers","views","likes","colorGenerator","Math","floor","random","red","green","blue","Statistics","title","statistics","id","percentage","style","backgroundColor","FriendListItem","isOnline","status","push","online","offline","join","width","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28fa3f32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__ssl5x\",\"description\":\"Profile_description__2mKSR\",\"avatar\":\"Profile_avatar__2Kfsz\",\"name\":\"Profile_name__2NURw\",\"tag\":\"Profile_tag__CvyA_\",\"location\":\"Profile_location__fQrYt\",\"stats\":\"Profile_stats__1wpnp\",\"item\":\"Profile_item__2RhZS\",\"label\":\"Profile_label__2vkkW\",\"quantity\":\"Profile_quantity__QMI0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__27cVQ\",\"title\":\"Statistics_title__3-WtY\",\"stat-list\":\"Statistics_stat-list__8I1gS\",\"item\":\"Statistics_item__3hrAI\",\"label\":\"Statistics_label__1t1za\",\"percentage\":\"Statistics_percentage__182nS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2H1wO\",\"status\":\"FriendListItem_status__1ds72\",\"avatar\":\"FriendListItem_avatar__2CKM1\",\"name\":\"FriendListItem_name__3h2_y\",\"online\":\"FriendListItem_online__Vuuyd\",\"offline\":\"FriendListItem_offline__mzFas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__d1G-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__WbUnh\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        {Object.entries(stats).map(([item, value]) => {\r\n          return (\r\n            <li className={ styles.item} key={item}>\r\n              <span className={styles.label}>{item}</span>\r\n              <span className={styles.quantity}>{value}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nProfile.defaultProps = {\r\n  avatar: 'https://svgsilh.com/svg/159236-9e9e9e.svg',\r\n  tag:'(empty)',\r\n  location:'(empty)',\r\n  stats:{\r\n    followers: 0,\r\n    views: 0,\r\n    likes: 0,\r\n  }\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst colorGenerator = () => {\r\n  const [red, green, blue] = [0, 1, 2].map(() => {\r\n    return Math.floor(Math.random() * 256);\r\n  });\r\n  return `rgb(${red},${green},${blue})`;\r\n};\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n      <ul className={styles['stat-list']}>\r\n        {stats.map(({ id, label, percentage }) => {\r\n\r\n          return (\r\n            <li style={{backgroundColor: colorGenerator()}} className={ styles.item} key={id}>\r\n              <span className={styles.label}>{label}</span>\r\n              <span className={styles.percentage}>{percentage}%</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\nStatistics.defaultProps = {\r\n  stats:[]\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  const status = [styles.status];\r\n  status.push(isOnline? styles.online:styles.offline)\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={status.join(' ')}></span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.defaultProps = {};\r\n\r\nFriendListItem.propTypes = {\r\n  isOnline: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles['friend-list']}>\n      {friends.map(({ id, avatar, name, isOnline }) => {\n        return (\n          <FriendListItem\n            key={id}\n            avatar={avatar}\n            name={name}\n            isOnline={isOnline}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.defaultProps = {\n  friends: [],\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      name: PropTypes.string.isRequired,\n      avatar: PropTypes.string,\n    }).isRequired,\n  ),\n};\n\nexport default FriendList;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles['transaction-history']}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => {\r\n          return (\r\n            <tr key={id}>\r\n              <td>{type}</td>\r\n              <td>{amount}</td>\r\n              <td>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\nTransactionHistory.defaultProps = {\r\n  items:[]\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\n\nimport './App.module.css';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './components/Profile/user.json';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nconst App = () => {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}